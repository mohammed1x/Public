#!/bin/bash
if ! command -v w3m &>/dev/null; then
    sudo apt install w3m -y;
    apt install w3m -y;
    apk add w3m -y;

    
    fi
default_location="Chanchalguda, Hyderabad, Telangana"

# Set the maximum width for Salah names
max_width=10

location() {
#	if [[ "$*" == "-l" ]]; then
		#fetch the location name in strings and return the location name
		echo "${default_location}"

#	else
#		return 0
#	fi
}

show_help() {

	echo -e "This is a minimalist namaz timings viewer right from your command line"
	echo -e "-w: web version using vim"
	echo -e "-white: shows without colour namaz info"
	echo -e "no arguments: plain minimalist info"

}

print_salah() {
	# Store the output of the command in a variable
	output="$(w3m -dump https://www.google.com/search?q=namaz+timings+${location} | grep -oE '\b(Fajr|Sunrise|Duhur|Asr|Maghrib|Isha)\b +[0-9]+:[0-9]+ [ap]m')"

	# Iterate over each Salah name and its timing
	while read -r line; do
		# Extract Salah name and timing
		salah=$(echo "$line" | grep -oE '\b(Fajr|Sunrise|Duhur|Asr|Maghrib|Isha)\b')
		timing=$(echo "$line" | grep -oE '[0-9]+:[0-9]+ [ap]m')

		# Calculate the number of spaces needed for alignment
		spaces=$((max_width - ${#salah}))

		# If there is -c in arguments, it should return with colors
		if [[ "$*" == *"-c"* ]]; then
			# Print Salah name in green color, followed by spaces, and then timing
			if [[ "$salah" == "Sunrise" ]]; then
				echo -e "\e[33m$salah\e[0m$(printf '%*s' "$spaces")$timing" # | pv -qL 50 # Sunrise in orange color
			else
				echo -e "\e[32m$salah\e[0m$(printf '%*s' "$spaces")$timing" # | pv -qL 50 # Other Salahs in green color
			fi
		elif [[ "$*" == *"-w"* ]]; then
			w3m https://www.google.com/search?q=namaz+timings+${location}
		else
			echo -e "$salah$(printf '%*s' "$spaces")$timing" # | pv -qL 50

		fi

		# if there is -l in arguments
		# It should fetch the very next string in the query
		# then it should just search for that string. No need to return minimalist output
	done <<<"$output"

}
#Set today's sunset
#Set location setting

case $* in

"-h")
	show_help # | pv -qL 100;
	;;
"-l")
    location
    ;;
"-white")
    print_salah
    ;;
*)
	echo ""
    
    #print_salah $* > ~/scripts/namazArchive/"$(date +"%d-%B-%Y")"
    #cat ~/scripts/namazArchive/"$(date +"%d-%B-%Y")" | ~/scripts/line_by_line
    print_salah -c $* 
    ;;

esac
